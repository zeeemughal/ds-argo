apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin
  namespace: postgres-db
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Content-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:; font-src 'self' data: https: http:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval';";
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
spec:
  tls:
  - hosts:
    - devpgadmin.devsoul.net
    secretName: devpgadmin-tls
  ingressClassName: nginx
  rules:
  - host: devpgadmin.devsoul.net
    http:
      paths:
      - path: /static/(.*)
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80
      - path: /js/(.*)
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80
      - path: /css/(.*)
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80
